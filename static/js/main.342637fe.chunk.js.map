{"version":3,"sources":["Components/Header.js","Components/Particulas.js","Components/Intro.js","Components/Fade.js","Components/Description.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","className","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Particulas","options","background","image","repeat","size","position","color","value","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","Intro","Container","strings","typeSpeed","backSpeed","loop","calc","x","y","window","innerWidth","innerHeight","trans4","Fade","useSpring","xy","config","mass","tension","friction","props","set","class","onMouseMove","clientX","clientY","div","style","transform","interpolate","Description","fluid","App","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+NAGe,SAASA,IAEpB,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAW,SAAUC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,cAAcC,QAAQ,QAC/E,kBAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,SAAnB,uBACA,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,yBAChB,kBAACC,EAAA,EAAD,CAAKX,UAAU,WACX,kBAACW,EAAA,EAAIC,KAAL,CAAUN,KAAK,aAAf,SACA,kBAACO,EAAA,EAAD,CAAaC,MAAM,QAAQJ,GAAG,2BAC1B,kBAACG,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,UACA,kBAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,kBACA,kBAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,aACA,kBAACO,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,oBAGR,kBAACK,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIC,KAAL,CAAUN,KAAK,YAAf,c,qBClBL,SAASW,IAEpB,OACI,kBAAC,IAAD,CACIP,GAAG,cACHQ,QAAS,CACLC,WAAY,CACRC,MAAO,uBACPC,OAAQ,YACRC,KAAM,QACNC,SAAU,gBACVC,MAAO,CACHC,MAAO,YAGfC,SAAU,GACVC,cAAe,CACXC,UAAW,SACXC,OAAQ,CACJC,QAAS,CACLC,QAAQ,EACRC,KAAM,QAEVC,QAAS,CACLF,QAAQ,EACRC,KAAM,UAEVE,QAAQ,GAEZC,MAAO,CACHC,OAAQ,CACJC,SAAU,IACVC,SAAU,EACVC,QAAS,GACTjB,KAAM,GAEVkB,KAAM,CACFC,SAAU,GAEdC,QAAS,CACLL,SAAU,IACVC,SAAU,MAItBK,UAAW,CACPnB,MAAO,CACHC,MAAO,WAEXmB,MAAO,CACHpB,MAAO,UACPa,SAAU,IACVN,QAAQ,EACRQ,QAAS,GACTM,MAAO,GAEXC,WAAY,CACRf,QAAQ,GAEZgB,KAAM,CACFC,UAAW,OACXjB,QAAQ,EACRkB,QAAS,SACTC,QAAQ,EACRC,MAAO,IACPC,UAAU,GAEdC,OAAQ,CACJC,QAAS,CACLvB,QAAQ,EACRwB,WAAY,KAEhB9B,MAAO,IAEXc,QAAS,CACLd,MAAO,IAEX+B,MAAO,CACHC,KAAM,UAEVnC,KAAM,CACF4B,QAAQ,EACRzB,MAAO,IAGfiC,cAAc,K,8BCnFf,SAASC,IAEpB,OACI,kBAACC,EAAA,EAAD,CAAW5D,UAAW,SAClB,4BAAI,6BAAJ,WAAqB,kBAAC,IAAD,CACjB6D,QAAS,CACL,oBACA,gBACA,SACA,mBACJC,UAAW,GACXC,UAAW,GACXC,MAAI,IARR,WAQuB,6BAT3B,OASwC,8B,oBCb1CC,EAAO,SAACC,EAAGC,GAAJ,MAAU,CAACD,EAAIE,OAAOC,WAAa,EAAGF,EAAIC,OAAOE,YAAc,IACtEC,EAAS,SAACL,EAAGC,GAAJ,4BAAyBD,EAAI,GAA7B,cAAyC,EAAJC,EAArC,UAEA,SAASK,IAAQ,IAAD,EAENC,aAAU,iBAAO,CAAEC,GAAI,CAAC,EAAG,GAAIC,OAAQ,CAAEC,KAAM,GAAIC,QAAS,IAAKC,SAAU,SAFrE,mBAEpBC,EAFoB,KAEbC,EAFa,KAI3B,OACI,yBAAKC,MAAM,gBAAgBC,YAAa,gBAAYhB,EAAZ,EAAGiB,QAAqBhB,EAAxB,EAAeiB,QAAf,OAAgCJ,EAAI,CAAEN,GAAIT,EAAKC,EAAGC,OACtF,kBAAC,IAASkB,IAAV,CAAcJ,MAAM,QAAQK,MAAO,CAAEC,UAAWR,EAAML,GAAGc,YAAYjB,OCTlE,SAASkB,IAEpB,OAAQ,kBAAC7B,EAAA,EAAD,CAAW5D,UAAW,cAAe0F,OAAK,GAC9C,wBAAIlE,MAAM,QAAV,4EACA,wUAI+C,8B,ICexCmE,E,uKAfX,OACE,yBAAK3F,UAAU,OAEb,kBAACiB,EAAD,MACA,kBAACnB,EAAD,MACA,kBAAC0E,EAAD,MACA,kBAACb,EAAD,MACA,kBAAC8B,EAAD,W,GAXUG,aCIEC,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.342637fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nexport default function Header() {\r\n\r\n    return (\r\n        <Navbar className={'header'} collapseOnSelect expand=\"lg\" bg=\"transparent\" variant=\"dark\" >\r\n            <Navbar.Brand href=\"#home\">Mateo GÃ³mez Ossa</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#features\">About</Nav.Link>\r\n                    <NavDropdown title=\"Works\" id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Nav>\r\n                    <Nav.Link href=\"#Contact\">Contact</Nav.Link>\r\n\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport Particles from \"react-tsparticles\";\r\n\r\nexport default function Particulas() {\r\n\r\n    return (\r\n        <Particles\r\n            id=\"tsparticles\"\r\n            options={{\r\n                background: {\r\n                    image: \"url('./Mateobg.png')\",\r\n                    repeat: 'no-repeat',\r\n                    size: 'cover',\r\n                    position: 'center center',\r\n                    color: {\r\n                        value: \"#000000\",\r\n                    },\r\n                },\r\n                fpsLimit: 60,\r\n                interactivity: {\r\n                    detectsOn: \"window\",\r\n                    events: {\r\n                        onClick: {\r\n                            enable: true,\r\n                            mode: \"push\",\r\n                        },\r\n                        onHover: {\r\n                            enable: true,\r\n                            mode: \"bubble\",\r\n                        },\r\n                        resize: true,\r\n                    },\r\n                    modes: {\r\n                        bubble: {\r\n                            distance: 100,\r\n                            duration: 3,\r\n                            opacity: 0.8,\r\n                            size: 5,\r\n                        },\r\n                        push: {\r\n                            quantity: 4,\r\n                        },\r\n                        repulse: {\r\n                            distance: 200,\r\n                            duration: 0.4,\r\n                        },\r\n                    },\r\n                },\r\n                particles: {\r\n                    color: {\r\n                        value: \"#ffffff\",\r\n                    },\r\n                    links: {\r\n                        color: \"#ffffff\",\r\n                        distance: 150,\r\n                        enable: true,\r\n                        opacity: 0.5,\r\n                        width: 1,\r\n                    },\r\n                    collisions: {\r\n                        enable: true,\r\n                    },\r\n                    move: {\r\n                        direction: \"none\",\r\n                        enable: true,\r\n                        outMode: \"bounce\",\r\n                        random: true,\r\n                        speed: 1.5,\r\n                        straight: false,\r\n                    },\r\n                    number: {\r\n                        density: {\r\n                            enable: false,\r\n                            value_area: 800,\r\n                        },\r\n                        value: 60,\r\n                    },\r\n                    opacity: {\r\n                        value: 0.5,\r\n                    },\r\n                    shape: {\r\n                        type: \"circle\",\r\n                    },\r\n                    size: {\r\n                        random: true,\r\n                        value: 3,\r\n                    },\r\n                },\r\n                detectRetina: true,\r\n            }}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport Typed from 'react-typed';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nexport default function Intro() {\r\n\r\n    return (\r\n        <Container className={'intro'} >\r\n            <h1><br></br> &sdot;\t<Typed\r\n                strings={[\r\n                    \"Hello! I'm Mateo.\",\r\n                    \"Web developer\",\r\n                    \"Artist\",\r\n                    \"Music producer.\"]}\r\n                typeSpeed={60}\r\n                backSpeed={50}\r\n                loop /> &sdot;</h1><br></br>    <br></br>\r\n        </Container>\r\n    )\r\n}","import { useSpring, animated } from 'react-spring';\r\nimport React from 'react';\r\n\r\n\r\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\r\nconst trans4 = (x, y) => `translate3d(${x / 20}px,${y * 0}px,0)`\r\n\r\nexport default function Fade() {\r\n\r\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\r\n\r\n    return (\r\n        <div class=\"containerfade\" onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\r\n            <animated.div class=\"card1\" style={{ transform: props.xy.interpolate(trans4) }} />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nexport default function Description() {\r\n\r\n    return (<Container className={'description'} fluid >\r\n        <h5 color='grey'>Junior Full-Stack web developer with preferences in Front-End and design</h5>\r\n        <p>Hi! my name is Mateo GÃ³mez Ossa I am an artist, music producer / DJ\r\n        and now a full-stack developer in growth and training\r\n        graduated from the Make it Real bootcamp. I'm building futures\r\n        projects and apps with a fast consumption design, simple design but\r\n          structured and easy to use for all users.</p><br></br>\r\n    </Container>\r\n    )\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header'\nimport Particulas from './Components/Particulas'\nimport Intro from './Components/Intro'\nimport Fade from './Components/Fade'\nimport Description from './Components/Description';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <Particulas />\n        <Header />\n        <Fade />\n        <Intro />\n        <Description />\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}